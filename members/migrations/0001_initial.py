# Generated by Django 5.1.4 on 2025-09-05 08:07

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('settings', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ChurchMember',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('member_id', models.CharField(blank=True, help_text='Unique ID consisting of a highly randomized mix of 10 letters and 10 numbers.', max_length=20, null=True, unique=True)),
                ('status', models.CharField(choices=[('Active', 'Active'), ('Inactive', 'Inactive'), ('Pending', 'Pending')], default='Pending', help_text='Indicates whether the church member is active, inactive, or pending.', max_length=10)),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now, editable=False, help_text='Date and time when the member was created.')),
                ('full_name', models.CharField(help_text='Full name of the church member.', max_length=255)),
                ('date_of_birth', models.DateField(help_text='Date of birth.')),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female')], help_text='Gender of the church member.', max_length=10)),
                ('phone_number', models.CharField(help_text='Phone number in the format: 255XXXXXXXXX.', max_length=12, unique=True, validators=[django.core.validators.RegexValidator(message='Phone number must be in the format: 255XXXXXXXXX (9 digits after 255).', regex='^255\\d{9}$')])),
                ('email', models.EmailField(blank=True, help_text="Email address (must end with '@gmail.com').", max_length=254, null=True, validators=[django.core.validators.RegexValidator(message="Email must be a valid Gmail address and end with '@gmail.com'.", regex='^[a-zA-Z0-9._%+-]+@gmail\\.com$')])),
                ('address', models.TextField(help_text='Full address of the church member.')),
                ('is_baptised', models.BooleanField(default=False, help_text='Has the member been baptized?')),
                ('date_of_baptism', models.DateField(blank=True, help_text='Date of baptism (if baptized).', null=True)),
                ('baptism_certificate', models.FileField(blank=True, help_text='Upload baptism certificate or document.', null=True, upload_to='baptism_certificates/')),
                ('date_confirmed', models.DateField(blank=True, help_text='Date of confirmation (if confirmed).', null=True)),
                ('confirmation_certificate', models.FileField(blank=True, help_text='Upload Confirmation certificate or document.', null=True, upload_to='confirmation_certificates/')),
                ('is_confirmed', models.BooleanField(default=False, help_text='Has the member been confirmed?')),
                ('is_this_church_member_a_leader', models.BooleanField(default=False, help_text='Indicates whether this church member is a leader.')),
                ('marital_status', models.CharField(choices=[('Single', 'Single'), ('Married', 'Married'), ('Divorced', 'Divorced'), ('Widowed', 'Widowed')], help_text='Marital status of the church member.', max_length=20)),
                ('date_of_marriage', models.DateField(blank=True, help_text='Date of marriage (if married).', null=True)),
                ('emergency_contact_name', models.CharField(help_text='Name of the person to contact during an emergency.', max_length=255)),
                ('emergency_contact_phone', models.CharField(help_text='Phone number of the emergency contact (format: 255XXXXXXXXX).', max_length=12, validators=[django.core.validators.RegexValidator(message='Phone number must be in the format: 255XXXXXXXXX (9 digits after 255).', regex='^255\\d{9}$')])),
                ('passport', models.ImageField(blank=True, help_text='Upload the passport photo of the member.', null=True, upload_to='church_member_passports/')),
                ('cell', models.ForeignKey(blank=True, help_text='The cell this church member belongs to.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='members', to='settings.cell')),
            ],
        ),
    ]
